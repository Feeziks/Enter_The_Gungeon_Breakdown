using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class RoomGenerator
{

    //public members

    //private members
    private static Object[] roomPieces;

    #region SINGLETON
    RoomGenerator()
    {

    }
    private static readonly object padlock = new object();
    private static RoomGenerator instance = null;

    public static RoomGenerator Instance
    {
        get
        {   
            lock(padlock)
            {
                if(instance == null)
                {
                    instance = new RoomGenerator();
                    
                    //Load all of the room pieces when the instance is created
                    roomPieces = Resources.LoadAll("RoomPieces", typeof(Texture2D));
                }
                return instance;
            }
        }
    }
    #endregion

    //public methods
    public Room GenerateRoom(int level, int difficulty)
    {
        //Generate a new room based on the given level and difficulty
        //TODO: In the future rooms should be generated by laying different tiles together not random value 0 to max

        //Make a "room" by combining some number of pieces
        //For now we wont worry about it being "correct" just test if we can do it
        Texture2D thisRoomTexture = new Texture2D(600,600);

        for(int x = 0; x < 2; x++)
        {
            for(int y = 0; y < 2; y ++)
            {
                //Pick a random room piece
                int idx = (int)Randomness.Instance.RandomUniformFloat(0, roomPieces.Length);
                Texture2D pieceToAdd = (Texture2D)roomPieces[idx];

                for(int i = 0; i < pieceToAdd.height; i++)
                {
                    for(int j = 0; j < pieceToAdd.width; j++)
                    {
                        thisRoomTexture.SetPixel( (x * pieceToAdd.width) + j, (y * pieceToAdd.height) + i, pieceToAdd.GetPixel(i, j));
                    }
                }
            }
        }

        thisRoomTexture.Apply();
        Room newRoom = new Room(1);
        newRoom.texture = thisRoomTexture;
        return newRoom;
    }

    //private methods

}
