using System.Collections;
using System.Collections.Generic;
using UnityEngine;


public class TestPieces
{
	private static GameObject TestRoomPiece_prefab = Resources.Load("RoomPieces/TestPieces/TestRoomPiece") as GameObject;
	private static GameObject TestRoomPiece2_prefab = Resources.Load("RoomPieces/TestPieces/TestRoomPiece2") as GameObject;
	private static GameObject TestRoomPiece2walls_prefab = Resources.Load("RoomPieces/TestPieces/TestRoomPiece2Walls") as GameObject;
	private static GameObject TestRoomPiece2walls_f_prefab = Resources.Load("RoomPieces/TestPieces/TestRoomPiece2Walls_f") as GameObject;
	private static GameObject TestRoomPiece3Walls_prefab = Resources.Load("RoomPieces/TestPieces/TestRoomPiece3Walls") as GameObject;
	private static GameObject TestRoomPiece3Walls_f_prefab = Resources.Load("RoomPieces/TestPieces/TestRoomPiece3Walls_f") as GameObject;
	private static GameObject TestRoomPieceCorner_prefab = Resources.Load("RoomPieces/TestPieces/TestRoomPieceCorner") as GameObject;
	private static GameObject TestRoomPieceCorner_f_prefab = Resources.Load("RoomPieces/TestPieces/TestRoomPieceCorner_f") as GameObject;
	private static GameObject TestRoomPieceCorner_ff_prefab = Resources.Load("RoomPieces/TestPieces/TestRoomPieceCorner_ff") as GameObject;
	private static GameObject TestRoomPieceCorner_fff_prefab = Resources.Load("RoomPieces/TestPieces/TestRoomPieceCorner_fff") as GameObject;
	private static GameObject TestRoomPieceDoor_prefab = Resources.Load("RoomPieces/TestPieces/TestRoomPieceDoor") as GameObject;
	private static GameObject TestRoomPiecePit_prefab = Resources.Load("RoomPieces/TestPieces/TestRoomPiecePit") as GameObject;
	private static GameObject TestRoomPieceWall_prefab = Resources.Load("RoomPieces/TestPieces/TestRoomPieceWall") as GameObject;
	private static GameObject TestRoomPieceWall_f_prefab = Resources.Load("RoomPieces/TestPieces/TestRoomPieceWall_f") as GameObject;
	private static GameObject TestRoomPieceWall_ff_prefab = Resources.Load("RoomPieces/TestPieces/TestRoomPieceWall_ff") as GameObject;
	private static GameObject TestRoomPieceWall_fff_prefab = Resources.Load("RoomPieces/TestPieces/TestRoomPieceWall_fff") as GameObject;
	private static GameObject Test_Inactive_Piece_prefab = Resources.Load("RoomPieces/TestPieces/Test_Inactive_Piece") as GameObject;


	private static int[,] TestRoomPiece_valid_neighbors = new int[8, 17] { { -1, 1, 2, -1, -1, -1, -1, -1, 8, 9, -1, 11, -1, -1, 14, -1, -1}, { -1, 1, -1, -1, -1, 5, -1, -1, 8, -1, -1, 11, -1, 13, 14, -1, -1}, { -1, 1, -1, -1, -1, 5, -1, 7, 8, -1, 10, 11, 12, -1, 14, -1, -1}, { -1, 1, -1, -1, -1, 5, -1, 7, -1, -1, 10, 11, 12, 13, -1, -1, -1}, { -1, 1, 2, -1, -1, -1, -1, -1, 8, 9, -1, 11, -1, -1, 14, -1, -1}, { -1, 1, -1, -1, 4, -1, 6, -1, -1, -1, 10, 11, 12, -1, -1, 15, -1}, { -1, 1, -1, -1, 4, -1, 6, -1, -1, 9, 10, 11, 12, -1, 14, -1, -1}, { -1, 1, -1, -1, 4, -1, -1, -1, -1, 9, -1, 11, -1, -1, 14, 15, -1} };
	private static int[,] TestRoomPiece2_valid_neighbors = new int[8, 17] { { 0, -1, 2, -1, -1, -1, -1, -1, 8, 9, -1, 11, -1, -1, 14, -1, -1}, { 0, -1, -1, -1, -1, 5, -1, -1, 8, -1, -1, 11, -1, 13, 14, -1, -1}, { 0, -1, -1, -1, -1, 5, -1, 7, 8, -1, 10, 11, 12, -1, 14, -1, -1}, { 0, -1, -1, -1, -1, 5, -1, 7, -1, -1, 10, 11, 12, 13, -1, -1, -1}, { 0, -1, 2, -1, -1, -1, -1, -1, 8, 9, -1, 11, -1, -1, 14, -1, -1}, { 0, -1, -1, -1, 4, -1, 6, -1, -1, -1, 10, 11, 12, -1, -1, 15, -1}, { 0, -1, -1, -1, 4, -1, 6, -1, -1, 9, 10, 11, 12, -1, 14, -1, -1}, { 0, -1, -1, -1, 4, -1, -1, -1, -1, 9, -1, 11, -1, -1, 14, 15, -1} };
	private static int[,] TestRoomPiece2walls_valid_neighbors = new int[8, 17] { { 0, 1, -1, -1, -1, -1, -1, -1, 8, 9, -1, 11, -1, -1, 14, -1, -1}, { -1, -1, -1, 3, 4, -1, 6, 7, -1, 9, 10, -1, 12, -1, -1, 15, 16}, { -1, -1, -1, -1, 4, -1, 6, -1, -1, 9, -1, -1, -1, -1, -1, 15, 16}, { -1, -1, -1, 3, 4, -1, 6, -1, 8, 9, -1, -1, -1, -1, 14, 15, 16}, { 0, 1, -1, -1, -1, -1, -1, -1, 8, 9, -1, 11, -1, -1, 14, -1, -1}, { -1, -1, -1, 3, -1, 5, -1, 7, 8, 9, -1, -1, -1, 13, 14, -1, 16}, { -1, -1, -1, -1, -1, 5, -1, 7, 8, -1, -1, -1, -1, 13, -1, -1, 16}, { -1, -1, -1, 3, -1, 5, 6, 7, 8, -1, 10, -1, 12, 13, -1, -1, 16} };
	private static int[,] TestRoomPiece2walls_f_valid_neighbors = new int[8, 17] { { -1, -1, -1, -1, 4, 5, 6, 7, -1, -1, 10, -1, 12, -1, -1, -1, 16}, { -1, -1, 2, -1, 4, -1, 6, 7, -1, 9, 10, -1, 12, -1, -1, 15, 16}, { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 13, -1, -1, -1}, { -1, -1, 2, -1, 4, -1, 6, -1, 8, 9, -1, -1, -1, -1, 14, 15, 16}, { -1, -1, -1, -1, 4, 5, 6, 7, -1, -1, 10, -1, 12, -1, -1, -1, 16}, { -1, -1, 2, -1, -1, 5, -1, 7, 8, 9, -1, -1, -1, 13, 14, -1, 16}, { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 15, -1}, { -1, -1, 2, -1, -1, 5, 6, 7, 8, -1, 10, -1, 12, 13, -1, -1, 16} };
	private static int[,] TestRoomPiece3Walls_valid_neighbors = new int[8, 17] { { -1, -1, -1, 3, -1, 5, 6, 7, -1, -1, 10, -1, 12, -1, -1, -1, 16}, { 0, 1, -1, -1, -1, 5, -1, -1, 8, -1, -1, 11, -1, 13, 14, -1, -1}, { 0, 1, -1, -1, -1, 5, -1, 7, 8, -1, 10, 11, 12, -1, 14, -1, -1}, { 0, 1, -1, -1, -1, 5, -1, 7, -1, -1, 10, 11, 12, 13, -1, -1, -1}, { -1, -1, -1, 3, -1, 5, 6, 7, -1, -1, 10, -1, 12, -1, -1, -1, 16}, { -1, -1, 2, 3, -1, 5, -1, 7, 8, 9, -1, -1, -1, 13, 14, -1, 16}, { -1, -1, 2, -1, -1, 5, -1, 7, 8, -1, -1, -1, -1, 13, -1, -1, 16}, { -1, -1, 2, 3, -1, 5, 6, 7, 8, -1, 10, -1, 12, 13, -1, -1, 16} };
	private static int[,] TestRoomPiece3Walls_f_valid_neighbors = new int[8, 17] { { -1, -1, -1, 3, 4, -1, 6, 7, -1, -1, 10, -1, 12, -1, -1, -1, 16}, { -1, -1, 2, 3, 4, -1, 6, 7, -1, 9, 10, -1, 12, -1, -1, 15, 16}, { -1, -1, 2, -1, 4, -1, 6, -1, -1, 9, -1, -1, -1, -1, -1, 15, 16}, { -1, -1, 2, 3, 4, -1, 6, -1, 8, 9, -1, -1, -1, -1, 14, 15, 16}, { -1, -1, -1, 3, 4, -1, 6, 7, -1, -1, 10, -1, 12, -1, -1, -1, 16}, { 0, 1, -1, -1, 4, -1, 6, -1, -1, -1, 10, 11, 12, -1, -1, 15, -1}, { 0, 1, -1, -1, 4, -1, 6, -1, -1, 9, 10, 11, 12, -1, 14, -1, -1}, { 0, 1, -1, -1, 4, -1, -1, -1, -1, 9, -1, 11, -1, -1, 14, 15, -1} };
	private static int[,] TestRoomPieceCorner_valid_neighbors = new int[8, 17] { { -1, -1, -1, 3, 4, 5, -1, 7, -1, -1, 10, -1, 12, -1, -1, -1, 16}, { 0, 1, -1, -1, -1, 5, -1, -1, 8, -1, -1, 11, -1, 13, 14, -1, -1}, { 0, 1, -1, -1, -1, 5, -1, 7, 8, -1, 10, 11, 12, -1, 14, -1, -1}, { -1, -1, 2, 3, 4, -1, -1, -1, 8, 9, -1, -1, -1, -1, 14, 15, 16}, { -1, -1, -1, 3, 4, 5, -1, 7, -1, -1, 10, -1, 12, -1, -1, -1, 16}, { -1, -1, 2, 3, -1, 5, -1, 7, 8, 9, -1, -1, -1, 13, 14, -1, 16}, { -1, -1, 2, -1, -1, 5, -1, 7, 8, -1, -1, -1, -1, 13, -1, -1, 16}, { -1, -1, 2, 3, -1, 5, -1, 7, 8, -1, 10, -1, 12, 13, -1, -1, 16} };
	private static int[,] TestRoomPieceCorner_f_valid_neighbors = new int[8, 17] { { -1, -1, -1, 3, 4, 5, 6, -1, -1, -1, 10, -1, 12, -1, -1, -1, 16}, { -1, -1, 2, 3, 4, -1, 6, -1, -1, 9, 10, -1, 12, -1, -1, 15, 16}, { -1, -1, 2, -1, 4, -1, 6, -1, -1, 9, -1, -1, -1, -1, -1, 15, 16}, { -1, -1, 2, 3, 4, -1, 6, -1, 8, 9, -1, -1, -1, -1, 14, 15, 16}, { -1, -1, -1, 3, 4, 5, 6, -1, -1, -1, 10, -1, 12, -1, -1, -1, 16}, { -1, -1, 2, 3, -1, 5, -1, -1, 8, 9, -1, -1, -1, 13, 14, -1, 16}, { 0, 1, -1, -1, 4, -1, 6, -1, -1, 9, 10, 11, 12, -1, 14, -1, -1}, { 0, 1, -1, -1, 4, -1, -1, -1, -1, 9, -1, 11, -1, -1, 14, 15, -1} };
	private static int[,] TestRoomPieceCorner_ff_valid_neighbors = new int[8, 17] { { 0, 1, 2, -1, -1, -1, -1, -1, -1, 9, -1, 11, -1, -1, 14, -1, -1}, { -1, -1, 2, 3, 4, -1, 6, 7, -1, 9, 10, -1, 12, -1, -1, 15, 16}, { -1, -1, 2, -1, 4, -1, 6, -1, -1, 9, -1, -1, -1, -1, -1, 15, 16}, { -1, -1, 2, 3, 4, -1, 6, -1, -1, 9, -1, -1, -1, -1, 14, 15, 16}, { 0, 1, 2, -1, -1, -1, -1, -1, -1, 9, -1, 11, -1, -1, 14, -1, -1}, { 0, 1, -1, -1, 4, -1, 6, -1, -1, -1, 10, 11, 12, -1, -1, 15, -1}, { 0, 1, -1, -1, 4, -1, 6, -1, -1, 9, 10, 11, 12, -1, 14, -1, -1}, { -1, -1, 2, 3, -1, 5, 6, 7, -1, -1, 10, -1, 12, 13, -1, -1, 16} };
	private static int[,] TestRoomPieceCorner_fff_valid_neighbors = new int[8, 17] { { 0, 1, 2, -1, -1, -1, -1, -1, 8, -1, -1, 11, -1, -1, 14, -1, -1}, { -1, -1, 2, 3, 4, -1, 6, 7, -1, -1, 10, -1, 12, -1, -1, 15, 16}, { 0, 1, -1, -1, -1, 5, -1, 7, 8, -1, 10, 11, 12, -1, 14, -1, -1}, { 0, 1, -1, -1, -1, 5, -1, 7, -1, -1, 10, 11, 12, 13, -1, -1, -1}, { 0, 1, 2, -1, -1, -1, -1, -1, 8, -1, -1, 11, -1, -1, 14, -1, -1}, { -1, -1, 2, 3, -1, 5, -1, 7, 8, -1, -1, -1, -1, 13, 14, -1, 16}, { -1, -1, 2, -1, -1, 5, -1, 7, 8, -1, -1, -1, -1, 13, -1, -1, 16}, { -1, -1, 2, 3, -1, 5, 6, 7, 8, -1, 10, -1, 12, 13, -1, -1, 16} };
	private static int[,] TestRoomPieceDoor_valid_neighbors = new int[8, 17] { { -1, -1, -1, 3, 4, 5, 6, 7, -1, -1, -1, -1, 12, -1, -1, -1, 16}, { 0, 1, -1, -1, -1, 5, -1, -1, 8, -1, -1, 11, -1, 13, 14, -1, -1}, { 0, 1, -1, -1, -1, 5, -1, 7, 8, -1, -1, 11, 12, -1, 14, -1, -1}, { -1, -1, 2, 3, 4, -1, 6, -1, 8, 9, -1, -1, -1, -1, 14, 15, 16}, { -1, -1, -1, 3, 4, 5, 6, 7, -1, -1, -1, -1, 12, -1, -1, -1, 16}, { -1, -1, 2, 3, -1, 5, -1, 7, 8, 9, -1, -1, -1, 13, 14, -1, 16}, { 0, 1, -1, -1, 4, -1, 6, -1, -1, 9, -1, 11, 12, -1, 14, -1, -1}, { 0, 1, -1, -1, 4, -1, -1, -1, -1, 9, -1, 11, -1, -1, 14, 15, -1} };
	private static int[,] TestRoomPiecePit_valid_neighbors = new int[8, 17] { { 0, 1, 2, -1, -1, -1, -1, -1, 8, 9, -1, -1, -1, -1, 14, -1, -1}, { 0, 1, -1, -1, -1, 5, -1, -1, 8, -1, -1, -1, -1, 13, 14, -1, -1}, { 0, 1, -1, -1, -1, 5, -1, 7, 8, -1, 10, -1, 12, -1, 14, -1, -1}, { 0, 1, -1, -1, -1, 5, -1, 7, -1, -1, 10, -1, 12, 13, -1, -1, -1}, { 0, 1, 2, -1, -1, -1, -1, -1, 8, 9, -1, -1, -1, -1, 14, -1, -1}, { 0, 1, -1, -1, 4, -1, 6, -1, -1, -1, 10, -1, 12, -1, -1, 15, -1}, { 0, 1, -1, -1, 4, -1, 6, -1, -1, 9, 10, -1, 12, -1, 14, -1, -1}, { 0, 1, -1, -1, 4, -1, -1, -1, -1, 9, -1, -1, -1, -1, 14, 15, -1} };
	private static int[,] TestRoomPieceWall_valid_neighbors = new int[8, 17] { { -1, -1, -1, 3, 4, 5, 6, 7, -1, -1, 10, -1, -1, -1, -1, -1, 16}, { 0, 1, -1, -1, -1, 5, -1, -1, 8, -1, -1, 11, -1, 13, 14, -1, -1}, { 0, 1, -1, -1, -1, 5, -1, 7, 8, -1, 10, 11, -1, -1, 14, -1, -1}, { -1, -1, 2, 3, 4, -1, 6, -1, 8, 9, -1, -1, -1, -1, 14, 15, 16}, { -1, -1, -1, 3, 4, 5, 6, 7, -1, -1, 10, -1, -1, -1, -1, -1, 16}, { -1, -1, 2, 3, -1, 5, -1, 7, 8, 9, -1, -1, -1, 13, 14, -1, 16}, { 0, 1, -1, -1, 4, -1, 6, -1, -1, 9, 10, 11, -1, -1, 14, -1, -1}, { 0, 1, -1, -1, 4, -1, -1, -1, -1, 9, -1, 11, -1, -1, 14, 15, -1} };
	private static int[,] TestRoomPieceWall_f_valid_neighbors = new int[8, 17] { { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 15, -1}, { -1, -1, 2, 3, 4, -1, 6, 7, -1, 9, 10, -1, 12, -1, -1, 15, 16}, { -1, -1, 2, -1, 4, -1, 6, -1, -1, 9, -1, -1, -1, -1, -1, 15, 16}, { -1, -1, 2, 3, 4, -1, 6, -1, 8, 9, -1, -1, -1, -1, 14, 15, 16}, { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 15, -1}, { 0, 1, -1, -1, 4, -1, 6, -1, -1, -1, 10, 11, 12, -1, -1, 15, -1}, { -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 15, -1}, { 0, 1, -1, -1, 4, -1, -1, -1, -1, 9, -1, 11, -1, -1, 14, 15, -1} };
	private static int[,] TestRoomPieceWall_ff_valid_neighbors = new int[8, 17] { { 0, 1, 2, -1, -1, -1, -1, -1, 8, 9, -1, 11, -1, -1, -1, -1, -1}, { -1, -1, 2, 3, 4, -1, 6, 7, -1, 9, 10, -1, 12, -1, -1, 15, 16}, { 0, 1, -1, -1, -1, 5, -1, 7, 8, -1, 10, 11, 12, -1, -1, -1, -1}, { 0, 1, -1, -1, -1, 5, -1, 7, -1, -1, 10, 11, 12, 13, -1, -1, -1}, { 0, 1, 2, -1, -1, -1, -1, -1, 8, 9, -1, 11, -1, -1, -1, -1, -1}, { 0, 1, -1, -1, 4, -1, 6, -1, -1, -1, 10, 11, 12, -1, -1, 15, -1}, { 0, 1, -1, -1, 4, -1, 6, -1, -1, 9, 10, 11, 12, -1, -1, -1, -1}, { -1, -1, 2, 3, -1, 5, 6, 7, 8, -1, 10, -1, 12, 13, -1, -1, 16} };
	private static int[,] TestRoomPieceWall_fff_valid_neighbors = new int[8, 17] { { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 13, -1, -1, -1}, { 0, 1, -1, -1, -1, 5, -1, -1, 8, -1, -1, 11, -1, 13, 14, -1, -1}, { -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, 13, -1, -1, -1}, { 0, 1, -1, -1, -1, 5, -1, 7, -1, -1, 10, 11, 12, 13, -1, -1, -1}, { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 13, -1, -1, -1}, { -1, -1, 2, 3, -1, 5, -1, 7, 8, 9, -1, -1, -1, 13, 14, -1, 16}, { -1, -1, 2, -1, -1, 5, -1, 7, 8, -1, -1, -1, -1, 13, -1, -1, 16}, { -1, -1, 2, 3, -1, 5, 6, 7, 8, -1, 10, -1, 12, 13, -1, -1, 16} };
	private static int[,] Test_Inactive_Piece_valid_neighbors = new int[8, 17] { { -1, -1, -1, 3, 4, 5, 6, 7, -1, -1, 10, -1, 12, -1, -1, -1, -1}, { -1, -1, 2, 3, 4, -1, 6, 7, -1, 9, 10, -1, 12, -1, -1, 15, -1}, { -1, -1, 2, -1, 4, -1, 6, -1, -1, 9, -1, -1, -1, -1, -1, 15, -1}, { -1, -1, 2, 3, 4, -1, 6, -1, 8, 9, -1, -1, -1, -1, 14, 15, -1}, { -1, -1, -1, 3, 4, 5, 6, 7, -1, -1, 10, -1, 12, -1, -1, -1, -1}, { -1, -1, 2, 3, -1, 5, -1, 7, 8, 9, -1, -1, -1, 13, 14, -1, -1}, { -1, -1, 2, -1, -1, 5, -1, 7, 8, -1, -1, -1, -1, 13, -1, -1, -1}, { -1, -1, 2, 3, -1, 5, 6, 7, 8, -1, 10, -1, 12, 13, -1, -1, -1} };


	public static Piece TestRoomPiece = new Piece("TestRoomPiece", TestRoomPiece_prefab, TestRoomPiece_valid_neighbors);
	public static Piece TestRoomPiece2 = new Piece("TestRoomPiece2", TestRoomPiece2_prefab, TestRoomPiece2_valid_neighbors);
	public static Piece TestRoomPiece2walls = new Piece("TestRoomPiece2walls", TestRoomPiece2walls_prefab, TestRoomPiece2walls_valid_neighbors);
	public static Piece TestRoomPiece2walls_f = new Piece("TestRoomPiece2walls_f", TestRoomPiece2walls_f_prefab, TestRoomPiece2walls_f_valid_neighbors);
	public static Piece TestRoomPiece3Walls = new Piece("TestRoomPiece3Walls", TestRoomPiece3Walls_prefab, TestRoomPiece3Walls_valid_neighbors);
	public static Piece TestRoomPiece3Walls_f = new Piece("TestRoomPiece3Walls_f", TestRoomPiece3Walls_f_prefab, TestRoomPiece3Walls_f_valid_neighbors);
	public static Piece TestRoomPieceCorner = new Piece("TestRoomPieceCorner", TestRoomPieceCorner_prefab, TestRoomPieceCorner_valid_neighbors);
	public static Piece TestRoomPieceCorner_f = new Piece("TestRoomPieceCorner_f", TestRoomPieceCorner_f_prefab, TestRoomPieceCorner_f_valid_neighbors);
	public static Piece TestRoomPieceCorner_ff = new Piece("TestRoomPieceCorner_ff", TestRoomPieceCorner_ff_prefab, TestRoomPieceCorner_ff_valid_neighbors);
	public static Piece TestRoomPieceCorner_fff = new Piece("TestRoomPieceCorner_fff", TestRoomPieceCorner_fff_prefab, TestRoomPieceCorner_fff_valid_neighbors);
	public static Piece TestRoomPieceDoor = new Piece("TestRoomPieceDoor", TestRoomPieceDoor_prefab, TestRoomPieceDoor_valid_neighbors);
	public static Piece TestRoomPiecePit = new Piece("TestRoomPiecePit", TestRoomPiecePit_prefab, TestRoomPiecePit_valid_neighbors);
	public static Piece TestRoomPieceWall = new Piece("TestRoomPieceWall", TestRoomPieceWall_prefab, TestRoomPieceWall_valid_neighbors);
	public static Piece TestRoomPieceWall_f = new Piece("TestRoomPieceWall_f", TestRoomPieceWall_f_prefab, TestRoomPieceWall_f_valid_neighbors);
	public static Piece TestRoomPieceWall_ff = new Piece("TestRoomPieceWall_ff", TestRoomPieceWall_ff_prefab, TestRoomPieceWall_ff_valid_neighbors);
	public static Piece TestRoomPieceWall_fff = new Piece("TestRoomPieceWall_fff", TestRoomPieceWall_fff_prefab, TestRoomPieceWall_fff_valid_neighbors);
	public static Piece Test_Inactive_Piece = new Piece("Test_Inactive_Piece", Test_Inactive_Piece_prefab, Test_Inactive_Piece_valid_neighbors);

	public static List<Piece> all_TestPieces_pieces = new List<Piece> {TestRoomPiece, TestRoomPiece2, TestRoomPiece2walls, TestRoomPiece2walls_f, TestRoomPiece3Walls, TestRoomPiece3Walls_f, TestRoomPieceCorner, TestRoomPieceCorner_f, TestRoomPieceCorner_ff, TestRoomPieceCorner_fff, TestRoomPieceDoor, TestRoomPiecePit, TestRoomPieceWall, TestRoomPieceWall_f, TestRoomPieceWall_ff, TestRoomPieceWall_fff, Test_Inactive_Piece};
}
